# 本文件里面的配置，tmux只会在启动的时候执行一遍，以后打开tmux并不会再次执行

# powerline



# 修改过激活控制台点快捷键为C-l
set-option -g prefix C-l
unbind-key C-b
# 按两次C-l才相当于原来的C-l
bind-key C-l send-prefix

#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"



# 设置默认的shell
#set-option -g default-shell "/bin/zsh"
#set-option -g default-command "/bin/zsh"

# set titles
set -g set-titles on
# 这个在terminal窗口显示当前所在目录，这样的话我的zsh里面就不需要显示当前目录了
set -g set-titles-string "#T"

# 新建窗口或者分屏的时候会进入当前目录
# 修改一些键绑定
# 为了跟emacs的类似，1为只留下一个窗口，2为水平分割，3为垂直分割
bind-key 1 break-pane
bind c new-window -c "#{pane_current_path}"
# 水平分割
bind-key 2 split-window -c "#{pane_current_path}"
# 垂直分割
bind-key 3 split-window -h -c "#{pane_current_path}"


# update the .tmux.conf
bind-key u source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# 给每个pane记录日志用的快捷键
bind-key . pipe-pane 'exec cat >>$HOME/.tmux/log/#W-#I-#P.log' \; display-message 'Started logging to $HOME/.tmux/log/#W-#I-#P.log' 
bind-key / pipe-pane \; display-message 'Ended logging to $HOME/.tmux/log/#W-#I-#P.log' 

# linux跟mac配置会不一样
if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux/tmux.linux'
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux/tmux.mac'

set-option -g utf8 on
set -g status-utf8 on


# rename a window,同时会提醒原来的名字
bind-key t command-prompt -I '#W' "rename-window '%%'"


# 可以不要按前缀键，连续击键的最长时间间隔
set-option -g repeat-time 500


# 开启tmux的鼠标功能
# 可以用鼠标选择窗口，改变窗口大小,这对不喜欢键盘操作的比较方便。。。对我就是没用啊^_^
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

#re bind emacs select,这样选择窗口的时候就可以通过h j来进行上下选择了
bind-key -t emacs-choice j down
bind-key -t emacs-choice k up
#set -g status-left '#(echo "mutt:15/36")'
#set -g status-left '#(~/test.sh)'

bind-key -t emacs-copy h cursor-left
bind-key -t emacs-copy l cursor-right
bind-key -t emacs-copy k cursor-up
bind-key -t emacs-copy j cursor-down



# set some options
set-option -sg escape-time 1

# set-option -g exit-unattached
# 创建窗口的时候index从0开始
set-option -g base-index 0
set-option -g bell-action any

# 设置buffer的个数,512个够用了
set-option -g buffer-limit 512
set -g history-limit 409600000
# 清空history
bind-key r clear-history

set-option -g status on
# use emacs mode in status line
set-option -g status-keys emacs


# 多久刷新一次状态栏的信息
set -g status-interval 5

# 将window list放在中间，感觉不好看，果断注释掉
# set -g status-justify centre


# 如果其他窗口有东西输出来，那么就会显示颜色
setw -g monitor-activity on
# set -g visual-activity on

# set the status line's colors
# 设置状态栏的颜色
set -g status-fg white
set -g status-bg black

# set the color of the window list
# 非当前窗口的颜色显示为黑色
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# set colors for the active window
# # 当前的窗口在状态栏里面的标志为红色
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# 设置active pane 颜色
set-option -g  pane-active-border-bg red
set-option -g  pane-active-border-fg yellow
set-option -g  pane-border-bg green
set-option -g  pane-border-fg blue




# 设置左侧状态栏的长度
set -g status-left-length 40
# set -g status-right-length 150
# 左侧状态栏显示
set -g status-left "#[fg=green]Session: #S #[fg=cyan]#P|"

set -g status-utf8 on

# set-option -g status-position top

# 右侧状态栏显示
# 15% | 28 Nov 18:15
set -g status-right "#[fg=cyan]Online: #{online_status} %d %b %R"
#set -g status-right "Online: #{online_status} | %a %h-%d %H:%M "


# Command / message line
# 设置命令行的颜色,这个以后再改
set -g message-fg yellow
set -g message-bg blue
set -g message-attr bright


# use emacs mode to copy and choice modes
set-option -gw  mode-keys emacs



# 还是程序运行结束以后窗口就关掉吧
# set-option -g set-remain-on-exit on

# screen lock
# 15分钟以后自动lock
#set-option -g lock-server on
#set-option -g lock-after-time 900
#set-option -g lock-command vlock 
#bind-key v lock-session


# set window option
# 不让window自动改名字，这记录日志多不方便啊
set-window-option -g automatic-rename off

#set-window-option -g xterm-keys on

set -g display-time 3000



# github上面维护的tmux的插件，很不错,这段配置要放在tmux的最后
# tmux plugins manageer
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-pain-control   \
  tmux-plugins/tmux-online-status     \
  tmux-plugins/tmux-resurrect   \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'




