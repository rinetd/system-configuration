# cat << ►_◄ > /dev/null


# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color" # colors!
# set -g default-terminal "xterm-256color" # colors!
setw -g xterm-keys on
set -s escape-time 0                      # fastest command sequences
# 可以不要按前缀键，连续击键的最长时间间隔
# 这个时间最好不要太长，要不然按键的时候会有很多坑
set -sg repeat-time 300                   # increase repeat timeout
set -s quiet on                           # disable various messages


# 修改过激活控制台点快捷键为C-l
set-option -g prefix C-l
unbind-key C-b
# 按两次C-l才相当于原来的C-l
bind-key C-l send-prefix

#set -g prefix2 C-a                        # GNU-Screen compatible prefix
#bind C-a send-prefix -2

set -g history-limit 5000                 # boost history

# edit configuration
# bind e new-window -n '~/.tmux.conf.local' "sh -c '\${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
# bind u source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if 'which -s reattach-to-user-namespace' 'set -g default-command "exec initializing... 2> /dev/null & reattach-to-user-namespace $SHELL -l"'


# -- display -------------------------------------------------------------------

set -g base-index 0         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

#setw -g automatic-rename on # rename window to reflect current program
# renumber windows when a window is closed
set -g renumber-windows off

# rename a window,同时会提醒原来的名字
bind-key t command-prompt -I '#W' "rename-window '%%'"


set -g set-titles on                        # set terminal title
#set -g set-titles-string "#S:#T "
set -g set-titles-string '#h ❐ #S ● #I #W #T'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# set the color of the window list
# 非当前窗口的颜色显示为黑色
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# set colors for the active window
# # 当前的窗口在状态栏里面的标志为红色
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# 设置active pane 颜色
set-option -g  pane-active-border-bg red
set-option -g  pane-active-border-fg yellow
set-option -g  pane-border-bg green
set-option -g  pane-border-fg blue


# 24 hour clock
setw -g clock-mode-style 24

# clear both screen and history
#bind -n C-l send-keys C-l \; run 'tmux clear-history'

# 设置buffer的个数,512个够用了
set-option -g buffer-limit 512
set -g history-limit 409600000
# 清空history
bind-key r clear-history


# activity
set -g monitor-activity on
set -g visual-activity off


# -- navigation ----------------------------------------------------------------

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
#bind > swap-pane -D       # swap current pane with the next one
#bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane'

# pane resizing
bind-key -r '<' resize-pane -L 3
bind-key -r '>' resize-pane -R 3
bind-key -r 'C-j' resize-pane -D 3
bind-key -r 'C-k' resize-pane -U 3

# 新建窗口或者分屏的时候会进入当前目录
# 修改一些键绑定
# 为了跟emacs的类似，1为只留下一个窗口，2为水平分割，3为垂直分割
bind-key 1 break-pane
bind c new-window -c "#{pane_current_path}"
# 水平分割
bind-key 2 split-window -c "#{pane_current_path}"
# 垂直分割
bind-key 3 split-window -h -c "#{pane_current_path}"


# window navigation
#unbind n
#unbind p
#bind -r C-h previous-window # select previous window
#bind -r C-l next-window     # select next window
#bind Tab last-window        # move to last active window

# toggle mouse
bind m run "~/.tmux/tmux-toggle-mouse"


# -- urlview -------------------------------------------------------------------
# 迅速打开tmux里面的url
# bind U run "~/.tmux/tmux-urlview"
# bind U run "cut -c3- ~/.tmux.conf | sh -s urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

bind F run "cut -c3- ~/.tmux.conf | sh -s fpp #{pane_id}"


# -- list choice ---------------------------------------------------------------



# -- edit mode -----------------------------------------------------------------

# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git


# -- copy mode -----------------------------------------------------------------

#bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
#bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from


# copy to Mac OSX pasteboard
if -b 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'


# -- user defined --------------------------------------------------------------

if '[ -f ~/.tmux/tmux.conf.local ]' 'source ~/.tmux/tmux.conf.local'


# -- 8< ------------------------------------------------------------------------

run 'cut -c3- ~/.tmux.conf | sh -s apply_configuration'


# ►_◄
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# apply_theme() {
#   tmux_conf_theme=${tmux_conf_theme:-default}
#   case "${tmux_conf_theme}" in
#     powerline|powerline_patched_font)
#       left_separator=''
#       left_separator_black=''
#       right_separator=''
#       right_separator_black=''
#       session_symbol=''
#       ;;
#     ""|default)
#       left_separator='|'
#       left_separator_black=''
#       right_separator='|'
#       right_separator_black=''
#       ;;
#   esac
#
#   case "$tmux_conf_theme" in
#     ""|default|powerline)
#
#       # panes
#       tmux_conf_theme_pane_border_fg=${tmux_conf_theme_pane_border_fg:-colour238}               # light gray
#       tmux_conf_theme_pane_active_border_fg=${tmux_conf_theme_pane_active_border_fg:-colour39}  # light blue
#
#       tmux set -g pane-border-style fg=$tmux_conf_theme_pane_border_fg \; set -g pane-active-border-style fg=$tmux_conf_theme_pane_active_border_fg
#       #uncomment for fat borders
#       #tmux set -ga pane-border-style bg=$tmux_conf_theme_pane_border_fg \; set -ga pane-active-border-style bg=$tmux_conf_theme_pane_active_border_fg
#
#       tmux_conf_theme_display_panes_active_colour=${tmux_conf_theme_display_panes_active_colour:-colour39}  # light blue
#       tmux_conf_theme_display_panes_colour=${tmux_conf_theme_display_panes_colour:-colour39}                # light blue
#       tmux set -g display-panes-active-colour $tmux_conf_theme_display_panes_active_colour \; set -g display-panes-colour $tmux_conf_theme_display_panes_colour
#
#       tmux_conf_theme_highlight_focused_pane=${tmux_conf_theme_highlight_focused_pane:-disabled}
#       tmux_conf_theme_focused_pane_fg=${tmux_conf_theme_focused_pane_fg:-default}   # default
#       tmux_conf_theme_focused_pane_bg=${tmux_conf_theme_focused_pane_bg:-colour23}  # dark blue/green
#       highlight_focused_pane_enabled=$( ([ x"$tmux_conf_theme_highlight_focused_pane" = x"enabled" ] || [ -z "$tmux_conf_theme_highlight_focused_pane" ]) && echo "true" || echo "false" )
#       if [ x"$highlight_focused_pane_enabled" = x"true" ] ; then
#         tmux setw -g window-active-style "fg=$tmux_conf_theme_focused_pane_fg,bg=$tmux_conf_theme_focused_pane_bg"
#       else
#         tmux setw -g window-active-style default
#       fi
#
#       # messages
#       tmux_conf_theme_message_fg=${tmux_conf_theme_message_fg:-colour16}  # black
#       tmux_conf_theme_message_bg=${tmux_conf_theme_message_bg:-colour226} # yellow
#       tmux_conf_theme_message_attr=${tmux_conf_theme_message_attr:-bold}
#       tmux set -g message-style fg=$tmux_conf_theme_message_fg,bg=$tmux_conf_theme_message_bg,$tmux_conf_theme_message_attr
#
#       tmux_conf_theme_message_command_fg=${tmux_conf_theme_message_command_fg:-colour16}   # black
#       tmux_conf_theme_message_command_bg=${tmux_conf_theme_message_command_bg:-colour160}  # light yellow
#       tmux set -g message-command-style fg=$tmux_conf_theme_message_command_fg,bg=$tmux_conf_theme_message_command_bg,$tmux_conf_theme_message_attr
#
#       # windows mode
#       tmux_conf_theme_mode_fg=${tmux_conf_theme_mode_fg:-colour16}  # black
#       tmux_conf_theme_mode_bg=${tmux_conf_theme_mode_bg:-colour226} # yellow
#       tmux_conf_theme_mode_attr=${tmux_conf_theme_mode_attr:-bold}
#       tmux setw -g mode-style fg=$tmux_conf_theme_mode_fg,bg=$tmux_conf_theme_mode_bg,$tmux_conf_theme_mode_attr
#
#       # status line
#       tmux_conf_theme_status_fg=${tmux_conf_theme_status_fg:-colour253} # white
#       tmux_conf_theme_status_bg=${tmux_conf_theme_status_bg:-colour232} # dark gray
#       tmux set -g status-style fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg
#
#       tmux_conf_theme_session_fg=${tmux_conf_theme_session_fg:-colour16}  # black
#       tmux_conf_theme_session_bg=${tmux_conf_theme_session_bg:-colour226} # yellow
#       status_left="#[fg=$tmux_conf_theme_session_fg,bg=$tmux_conf_theme_session_bg,bold] ❐ #S #[fg=$tmux_conf_theme_session_bg,bg=$tmux_conf_theme_status_bg,nobold]$left_separator_black"
#       if [ x"`tmux -q -L tmux_theme_status_left_test -f /dev/null new-session -d \; show -g -v status-left \; kill-session`" = x"[#S] " ] ; then
#         status_left="$status_left "
#       fi
#       tmux set -g status-left-length 32 \; set -g status-left "$status_left"
#
#       tmux_conf_theme_window_status_fg=${tmux_conf_theme_window_status_fg:-colour245} # light gray
#       tmux_conf_theme_window_status_bg=${tmux_conf_theme_window_status_bg:-colour232} # dark gray
#       window_status_format="#I #W"
#       tmux setw -g window-status-style fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg \; setw -g window-status-format "$window_status_format"
#
#       tmux_conf_theme_window_status_current_fg=${tmux_conf_theme_window_status_current_fg:-colour16} # black
#       tmux_conf_theme_window_status_current_bg=${tmux_conf_theme_window_status_current_bg:-colour39} # light blue
#       window_status_current_format="#[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_window_status_current_bg]$left_separator_black#[fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,bold] #I $left_separator #W #[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_status_bg,nobold]$left_separator_black"
#       tmux setw -g window-status-current-format "$window_status_current_format"
#       tmux set -g status-justify left
#
#       tmux_conf_theme_window_status_activity_fg=${tmux_conf_theme_window_status_activity_fg:-default}
#       tmux_conf_theme_window_status_activity_bg=${tmux_conf_theme_window_status_activity_bg:-default}
#       tmux_conf_theme_window_status_activity_attr=${tmux_conf_theme_window_status_activity_attr:-underscore}
#       tmux setw -g window-status-activity-style fg=$tmux_conf_theme_window_status_activity_fg,bg=$tmux_conf_theme_window_status_activity_bg,$tmux_conf_theme_window_status_activity_attr
#
#       tmux_conf_theme_window_status_bell_fg=${tmux_conf_theme_window_status_bell_fg:-colour226} # yellow
#       tmux_conf_theme_window_status_bell_bg=${tmux_conf_theme_window_status_bell_bg:-default}
#       tmux_conf_theme_window_status_bell_attr=${tmux_conf_theme_window_status_bell_attr:-blink,bold}
#       tmux setw -g window-status-bell-style fg=$tmux_conf_theme_window_status_bell_fg,bg=$tmux_conf_theme_window_status_bell_bg,$tmux_conf_theme_window_status_bell_attr
#
#       window_status_last_fg=colour39 # light blue
#       window_status_last_attr=default
#       tmux setw -g window-status-last-style $window_status_last_attr,fg=$window_status_last_fg
#
#       tmux_conf_theme_prefix=${tmux_conf_theme_prefix:-disabled}
#       tmux_conf_theme_battery=${tmux_conf_theme_battery:-enabled}
#       tmux_conf_theme_time=${tmux_conf_theme_time:-enabled}
#       tmux_conf_theme_date=${tmux_conf_theme_date:-enabled}
#       tmux_conf_theme_username=${tmux_conf_theme_username:-enabled}
#       tmux_conf_theme_hostname=${tmux_conf_theme_hostname:-enabled}
#
#       prefix_enabled=$( ([ x"$tmux_conf_theme_prefix" = x"enabled" ] || [ -z "$tmux_conf_theme_prefix" ]) && echo "true" || echo "false" )
#       battery_enabled=$( ([ x"$tmux_conf_theme_battery" = x"enabled" ] || [ -z "$tmux_conf_theme_battery" ]) && echo "true" || echo "false" )
#       time_enabled=$( ([ x"$tmux_conf_theme_time" = x"enabled" ] || [ -z "$tmux_conf_theme_time" ]) && echo "true" || echo "false" )
#       date_enabled=$( ([ x"$tmux_conf_theme_date" = x"enabled" ] || [ -z "$tmux_conf_theme_date" ]) && echo "true" || echo "false" )
#       username_enabled=$( ([ x"$tmux_conf_theme_username" = x"enabled" ] || [ -z "$tmux_conf_theme_username" ] || ([ x"$tmux_conf_theme_username" = x"ssh" ] && ([ -n "$SSH_CLIENT" ] || [ -n "$SSH_CONNECTION" ] || [ -n "$SSH_TTY" ]))) && echo "true" || echo "false" )
#       hostname_enabled=$( ([ x"$tmux_conf_theme_hostname" = x"enabled" ] || [ -z "$tmux_conf_theme_hostname" ] || ([ x"$tmux_conf_theme_hostname" = x"ssh" ] && ([ -n "$SSH_CLIENT" ] || [ -n "$SSH_CONNECTION" ] || [ -n "$SSH_TTY" ]))) && echo "true" || echo "false" )
#
#       tmux_conf_theme_prefix_fg=${tmux_conf_theme_prefix_fg:-colour253}       # white
#       tmux_conf_theme_prefix_bg=${tmux_conf_theme_prefix_bg:-colour16}        # black
#       tmux_conf_theme_time_date_fg=${tmux_conf_theme_time_date_fg:-colour247} # light gray
#       tmux_conf_theme_time_date_bg=${tmux_conf_theme_time_date_bg:-colour232} # dark gray
#       tmux_conf_theme_username_fg=colour254                                   # white
#       tmux_conf_theme_username_bg=colour160                                   # red
#       tmux_conf_theme_hostname_fg=colour16                                    # black
#       tmux_conf_theme_hostname_bg=colour254                                   # white
#
#       if [ x"$prefix_enabled" = x"true" ] ; then
#         status_right_prefix="#{?client_prefix,#[fg=$tmux_conf_theme_prefix_fg]#[bg=$tmux_conf_theme_prefix_bg]#[bold]⌨ #[fg=$tmux_conf_theme_prefix_fg]#[bg=$tmux_conf_theme_status_bg]#[nobold],}"
#       fi
#       if [ x"$battery_enabled" = x"true" ] ; then
#         status_right_battery="${tmux_conf_battery:-#(cut -c3- ~/.tmux.conf | sh -s battery ${tmux_conf_battery_symbol:-block} ${tmux_conf_battery_symbol_count:-auto} \"${tmux_conf_battery_palette:-colour160,colour254,colour16}\" ${tmux_conf_battery_status:-enabled})} "
#         has_battery=$(eval echo \$${status_right_battery#\#})
#         if [ -n "$has_battery" ] && ([ x"$time_enabled" = x"true" ] || [ x"$date_enabled" = x"true" ]) ; then
#           status_right_battery="${status_right_battery}#[fg=$tmux_conf_theme_time_date_fg,nobold]$right_separator"
#         fi
#       fi
#       if [ x"$time_enabled" = x"true" ] ; then
#         status_right_time="#[fg=$tmux_conf_theme_time_date_fg,nobold]${status_right_time} %R "
#         if [ x"$date_enabled" = x"true" ] ; then
#           status_right_time="${status_right_time}#[fg=$tmux_conf_theme_time_date_fg,nobold]$right_separator"
#         fi
#       fi
#       if [ x"$date_enabled" = x"true" ] ; then
#         status_right_date="#[fg=$tmux_conf_theme_time_date_fg,nobold] %d %b "
#       fi
#       if [ x"$username_enabled" = x"true" ] ; then
#         status_right_username="#[fg=$tmux_conf_theme_username_bg,bg=$tmux_conf_theme_time_date_bg,nobold]$right_separator_black#[fg=$tmux_conf_theme_username_fg,bg=$tmux_conf_theme_username_bg,nobold] #(whoami) "
#       fi
#       if [ x"$hostname_enabled" = x"true" ] ; then
#         if [ x"$username_enabled" = x"true" ] ; then
#           status_right_hostname="#[bg=$tmux_conf_theme_username_bg]"
#         else
#           status_right_hostname="#[bg=$tmux_conf_theme_time-data_bg]"
#         fi
#         status_right_hostname="#[fg=$tmux_conf_theme_hostname_bg,nobold]${status_right_hostname}$right_separator_black#[fg=$tmux_conf_theme_hostname_fg,bg=$tmux_conf_theme_hostname_bg,bold] #h "
#       fi
#
#       status_right="${status_right_prefix}${status_right_battery}${status_right_time}${status_right_date}${status_right_username}${status_right_hostname}"
#       tmux set -g status-right-length 64 \; set -g status-right "$status_right"
#
#       # clock
#       clock_mode_colour=colour39  # light blue
#       tmux setw -g clock-mode-colour $clock_mode_colour
#       ;;
#   esac
# }
#
# apply_configuration() {
#  apply_theme
#  apply_configurable_bindings
#  for name in $(printenv | grep -Eo ^tmux_conf_[^=]+); do tmux setenv -gu $name; done;
# }
#
# fpp() {
#   tmux capture-pane -J -S - -E - -b fpp-$1 -t $1
#   tmux split-window "(tmux show-buffer -b fpp-$1 | fpp || true); tmux delete-buffer -b fpp-$1"
# }

# $@


# set-option -g display-panes-active-colour colour33 #blue
# set-option -g display-panes-colour colour166 #orange

# set-option -g display-panes-active-colour red
#set -ga display-panes-active-colour '#100000'
#set -g display-panes-colour red
# 设置当前pane的背景色前景色
#setw -g window-active-style "fg=#000000,bg=#ffffff"
#setw -g window-active-style "fg=$tmux_conf_theme_focused_pane_fg,bg=$tmux_conf_theme_focused_pane_bg"



#re bind emacs select,这样选择窗口的时候就可以通过h j来进行上下选择了
bind-key -t emacs-choice j down
bind-key -t emacs-choice k up

bind-key -t emacs-copy h cursor-left
bind-key -t emacs-copy l cursor-right
bind-key -t emacs-copy k cursor-up
bind-key -t emacs-copy j cursor-down

# 原来C-c是新开一个session，这个不需要
unbind-key C-c

# linux跟mac配置会不一样
if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux/tmux.linux'
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux/tmux.mac'


# github上面维护的tmux的插件，很不错,这段配置要放在tmux的最后
# 这里的插件不需要自己维护，直接从github上面下载就好
# Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

# urlview,在tmux里面直接通过urlview
set -g @plugin 'tmux-plugins/tmux-urlview'
# url快捷键定义
set -g @urlview-key 'L'

# tmux plugins manageer
# List of plugins
# Supports `github_username/repo` or full git repo URLs
# List of plugins
#set -g @tpm_plugins 'tmux-plugins/tpm'
# 保存tmux的session以及自动恢复
#set -g @tpm_plugins 'tmux-plugins/tmux-resurrect'
#set -g @tpm_plugins 'tmux-plugins/tmux-continuum'
#set -g @continuum-save-interval '1'



# set -g @tpm_plugins '              \
#   tmux-plugins/tpm                 \
#   tmux-plugins/tmux-logging   \
#   tmux-plugins/tmux-resurrect \
#   tmux-plugins/tmux-continuum \
# '

#   #tmux-plugins/tmux-pain-control   \
# # tmux-resurrect每30分钟备份一次
# set -g @continuum-save-interval '30'

# # 通过Tmux Resurrect来恢复原来的tmux环境，很有用的功能,赞一个
# set -g @resurrect-processes ':all:'


# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'


